{"ast":null,"code":"const axios = require('axios');\n\nexport const SHIPS_FETCH_PENDING = 'SHIPS_FETCH_PENDING';\nexport const SHIPS_FETCH_ERROR = 'SHIPS_FETCH_ERROR';\nexport const SHIPS_FETCH_SUCCESS = 'SHIPS_FETCH_SUCCESS';\nexport const fetchShips = () => async dispatch => {\n  dispatch({\n    type: SHIPS_FETCH_PENDING\n  });\n\n  try {\n    const response = await axios.get('http://localhost:3001/api/ships');\n    console.log('useApiRequest response', response);\n    dispatch({\n      type: SHIPS_FETCH_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHIPS_FETCH_ERROR,\n      error\n    });\n  }\n};","map":{"version":3,"sources":["/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/actions/shipActions.js"],"names":["axios","require","SHIPS_FETCH_PENDING","SHIPS_FETCH_ERROR","SHIPS_FETCH_SUCCESS","fetchShips","dispatch","type","response","get","console","log","data","error"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEL;AAAP,GAAD,CAAR;;AACA,MAAI;AACA,UAAMM,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,iCAAV,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,QAAtC;AACAF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEH,mBAAP;AAA4BQ,MAAAA,IAAI,EAAEJ,QAAQ,CAACI;AAA3C,KAAD,CAAR;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,iBAAP;AAA0BU,MAAAA;AAA1B,KAAD,CAAR;AACH;AACJ,CATM","sourcesContent":["const axios = require('axios');\n\nexport const SHIPS_FETCH_PENDING = 'SHIPS_FETCH_PENDING';\nexport const SHIPS_FETCH_ERROR = 'SHIPS_FETCH_ERROR';\nexport const SHIPS_FETCH_SUCCESS = 'SHIPS_FETCH_SUCCESS';\n\nexport const fetchShips = () => async dispatch => {\n    dispatch({type: SHIPS_FETCH_PENDING});\n    try {\n        const response = await axios.get('http://localhost:3001/api/ships');\n        console.log('useApiRequest response', response);\n        dispatch({type: SHIPS_FETCH_SUCCESS, data: response.data});\n    } catch (error) {\n        dispatch({type: SHIPS_FETCH_ERROR, error});\n    }\n}"]},"metadata":{},"sourceType":"module"}