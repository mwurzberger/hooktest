{"ast":null,"code":"const axios = require('axios');\n\nexport const SHIP_FETCH_PENDING = 'SHIP_FETCH_PENDING';\nexport const SHIP_FETCH_ERROR = 'SHIPS_FETCH_ERROR';\nexport const SHIP_FETCH_SUCCESS = 'SHIP_FETCH_SUCCESS';\nexport const fetchShipById = id => async dispatch => {\n  console.log('fetchShipById', id);\n  dispatch({\n    type: SHIP_FETCH_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'get',\n      url: \"http://localhost:3001/api/ships/\".concat(id)\n    });\n    dispatch({\n      type: SHIP_FETCH_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHIP_FETCH_ERROR,\n      error\n    });\n  }\n};\nexport const SHIP_CREATE_PENDING = 'SHIP_CREATE_PENDING';\nexport const SHIP_CREATE_ERROR = 'SHIP_CREATE_ERROR';\nexport const SHIP_CREATE_SUCCESS = 'SHIP_CREATE_SUCCESS';\nexport const createShip = newShip => async dispatch => {\n  console.log('createShip', newShip);\n  dispatch({\n    type: SHIP_CREATE_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'post',\n      url: \"http://localhost:3001/api/ships/\",\n      data: newShip\n    });\n    dispatch({\n      type: SHIP_CREATE_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHIP_CREATE_ERROR,\n      error\n    });\n  }\n};\nexport const SHIP_UPDATE_PENDING = 'SHIP_UPDATE_PENDING';\nexport const SHIP_UPDATE_ERROR = 'SHIP_UPDATE_ERROR';\nexport const SHIP_UPDATE_SUCCESS = 'SHIP_UPDATE_SUCCESS';\nexport const updateShip = newShip => async dispatch => {\n  console.log('updateShip', newShip);\n  dispatch({\n    type: SHIP_UPDATE_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'put',\n      url: \"http://localhost:3001/api/ships/\".concat(newShip.id),\n      data: newShip\n    });\n    dispatch({\n      type: SHIP_UPDATE_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHIP_UPDATE_ERROR,\n      error\n    });\n  }\n};","map":{"version":3,"sources":["/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/actions/shipActions.js"],"names":["axios","require","SHIP_FETCH_PENDING","SHIP_FETCH_ERROR","SHIP_FETCH_SUCCESS","fetchShipById","id","dispatch","console","log","type","response","method","url","data","error","SHIP_CREATE_PENDING","SHIP_CREATE_ERROR","SHIP_CREATE_SUCCESS","createShip","newShip","SHIP_UPDATE_PENDING","SHIP_UPDATE_ERROR","SHIP_UPDATE_SUCCESS","updateShip"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,gBAAgB,GAAG,mBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,aAAa,GAAGC,EAAE,IAAI,MAAMC,QAAN,IAAkB;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,EAA7B;AACAC,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAER;AAAP,GAAD,CAAR;;AACA,MAAI;AACA,UAAMS,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,MAAAA,MAAM,EAAE,KADiB;AAEzBC,MAAAA,GAAG,4CAAqCP,EAArC;AAFsB,KAAD,CAA5B;AAIAC,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEN,kBAAP;AAA2BU,MAAAA,IAAI,EAAEH,QAAQ,CAACG;AAA1C,KAAD,CAAR;AACH,GAND,CAME,OAAOC,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP,gBAAP;AAAyBY,MAAAA;AAAzB,KAAD,CAAR;AACH;AACJ,CAZM;AAcP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAI,MAAMb,QAAN,IAAkB;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BW,OAA1B;AACAb,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEM;AAAP,GAAD,CAAR;;AACA,MAAI;AACA,UAAML,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,MAAAA,MAAM,EAAE,MADiB;AAEzBC,MAAAA,GAAG,oCAFsB;AAGzBC,MAAAA,IAAI,EAAEM;AAHmB,KAAD,CAA5B;AAKAb,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEQ,mBAAP;AAA4BJ,MAAAA,IAAI,EAAEH,QAAQ,CAACG;AAA3C,KAAD,CAAR;AACH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEO,iBAAP;AAA0BF,MAAAA;AAA1B,KAAD,CAAR;AACH;AACJ,CAbM;AAeP,OAAO,MAAMM,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,UAAU,GAAGJ,OAAO,IAAI,MAAMb,QAAN,IAAkB;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BW,OAA1B;AACAb,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEW;AAAP,GAAD,CAAR;;AACA,MAAI;AACA,UAAMV,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,MAAAA,MAAM,EAAE,KADiB;AAEzBC,MAAAA,GAAG,4CAAqCO,OAAO,CAACd,EAA7C,CAFsB;AAGzBQ,MAAAA,IAAI,EAAEM;AAHmB,KAAD,CAA5B;AAKAb,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEa,mBAAP;AAA4BT,MAAAA,IAAI,EAAEH,QAAQ,CAACG;AAA3C,KAAD,CAAR;AACH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEY,iBAAP;AAA0BP,MAAAA;AAA1B,KAAD,CAAR;AACH;AACJ,CAbM","sourcesContent":["const axios = require('axios');\n\nexport const SHIP_FETCH_PENDING = 'SHIP_FETCH_PENDING';\nexport const SHIP_FETCH_ERROR = 'SHIPS_FETCH_ERROR';\nexport const SHIP_FETCH_SUCCESS = 'SHIP_FETCH_SUCCESS';\n\nexport const fetchShipById = id => async dispatch => {\n    console.log('fetchShipById', id);\n    dispatch({type: SHIP_FETCH_PENDING});\n    try {\n        const response = await axios({\n            method: 'get',\n            url: `http://localhost:3001/api/ships/${id}`,\n        });\n        dispatch({type: SHIP_FETCH_SUCCESS, data: response.data});\n    } catch (error) {\n        dispatch({type: SHIP_FETCH_ERROR, error});\n    }\n}\n\nexport const SHIP_CREATE_PENDING = 'SHIP_CREATE_PENDING';\nexport const SHIP_CREATE_ERROR = 'SHIP_CREATE_ERROR';\nexport const SHIP_CREATE_SUCCESS = 'SHIP_CREATE_SUCCESS';\n\nexport const createShip = newShip => async dispatch => {\n    console.log('createShip', newShip);\n    dispatch({type: SHIP_CREATE_PENDING});\n    try {\n        const response = await axios({\n            method: 'post',\n            url: `http://localhost:3001/api/ships/`,\n            data: newShip\n        });\n        dispatch({type: SHIP_CREATE_SUCCESS, data: response.data});\n    } catch (error) {\n        dispatch({type: SHIP_CREATE_ERROR, error});\n    }\n}\n\nexport const SHIP_UPDATE_PENDING = 'SHIP_UPDATE_PENDING';\nexport const SHIP_UPDATE_ERROR = 'SHIP_UPDATE_ERROR';\nexport const SHIP_UPDATE_SUCCESS = 'SHIP_UPDATE_SUCCESS';\n\nexport const updateShip = newShip => async dispatch => {\n    console.log('updateShip', newShip);\n    dispatch({type: SHIP_UPDATE_PENDING});\n    try {\n        const response = await axios({\n            method: 'put',\n            url: `http://localhost:3001/api/ships/${newShip.id}`,\n            data: newShip\n        });\n        dispatch({type: SHIP_UPDATE_SUCCESS, data: response.data});\n    } catch (error) {\n        dispatch({type: SHIP_UPDATE_ERROR, error});\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}