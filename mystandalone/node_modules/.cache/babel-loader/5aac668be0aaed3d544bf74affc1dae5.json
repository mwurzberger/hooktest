{"ast":null,"code":"const axios = require('axios');\n\nexport const CLEAR_SHIP_SELECTION = 'CLEAR_SHIP_SELECTION';\nexport const clearShipSelection = () => async dispatch => {\n  dispatch({\n    type: CLEAR_SHIP_SELECTION\n  });\n};\nexport const SHIP_FETCH_PENDING = 'SHIP_FETCH_PENDING';\nexport const SHIP_FETCH_ERROR = 'SHIPS_FETCH_ERROR';\nexport const SHIP_FETCH_SUCCESS = 'SHIP_FETCH_SUCCESS';\nexport const fetchShipById = id => async dispatch => {\n  console.log('fetchShipById', id);\n  dispatch({\n    type: SHIP_FETCH_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'get',\n      url: \"http://localhost:3001/api/ships/\".concat(id)\n    });\n    dispatch({\n      type: SHIP_FETCH_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHIP_FETCH_ERROR,\n      error\n    });\n  }\n};\nexport const SHIP_CREATE_PENDING = 'SHIP_CREATE_PENDING';\nexport const SHIP_CREATE_ERROR = 'SHIP_CREATE_ERROR';\nexport const SHIP_CREATE_SUCCESS = 'SHIP_CREATE_SUCCESS';\nexport const createShip = newShip => async dispatch => {\n  console.log('createShip', newShip);\n  dispatch({\n    type: SHIP_CREATE_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'post',\n      url: \"http://localhost:3001/api/ships/\",\n      data: newShip\n    });\n    console.log('createShip response', response);\n    dispatch({\n      type: SHIP_CREATE_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHIP_CREATE_ERROR,\n      error\n    });\n  }\n};\nexport const SHIP_UPDATE_PENDING = 'SHIP_UPDATE_PENDING';\nexport const SHIP_UPDATE_ERROR = 'SHIP_UPDATE_ERROR';\nexport const SHIP_UPDATE_SUCCESS = 'SHIP_UPDATE_SUCCESS';\nexport const updateShip = newShip => async dispatch => {\n  console.log('updateShip', newShip);\n  dispatch({\n    type: SHIP_UPDATE_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'put',\n      url: \"http://localhost:3001/api/ships/\".concat(newShip.id),\n      data: newShip\n    });\n    console.log('updateShip response', response);\n    dispatch({\n      type: SHIP_UPDATE_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHIP_UPDATE_ERROR,\n      error\n    });\n  }\n};\nexport const SHIP_DELETE_PENDING = 'SHIP_DELETE_PENDING';\nexport const SHIP_DELETE_ERROR = 'SHIP_DELETE_ERROR';\nexport const SHIP_DELETE_SUCCESS = 'SHIP_DELETE_SUCCESS';\nexport const deleteShip = shipId => async dispatch => {\n  console.log('deleteShip', shipId);\n  dispatch({\n    type: SHIP_DELETE_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'delete',\n      url: \"http://localhost:3001/api/ships/\".concat(shipId)\n    });\n    console.log('deleteShip response', response);\n    dispatch({\n      type: SHIP_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: SHIP_DELETE_ERROR,\n      error\n    });\n  }\n};","map":{"version":3,"sources":["/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/actions/shipActions.js"],"names":["axios","require","CLEAR_SHIP_SELECTION","clearShipSelection","dispatch","type","SHIP_FETCH_PENDING","SHIP_FETCH_ERROR","SHIP_FETCH_SUCCESS","fetchShipById","id","console","log","response","method","url","data","error","SHIP_CREATE_PENDING","SHIP_CREATE_ERROR","SHIP_CREATE_SUCCESS","createShip","newShip","SHIP_UPDATE_PENDING","SHIP_UPDATE_ERROR","SHIP_UPDATE_SUCCESS","updateShip","SHIP_DELETE_PENDING","SHIP_DELETE_ERROR","SHIP_DELETE_SUCCESS","deleteShip","shipId"],"mappings":"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","sourcesContent":["const axios = require('axios');\n\nexport const CLEAR_SHIP_SELECTION = 'CLEAR_SHIP_SELECTION';\nexport const clearShipSelection = () => async dispatch => {\n    dispatch({type: CLEAR_SHIP_SELECTION});\n}\n\nexport const SHIP_FETCH_PENDING = 'SHIP_FETCH_PENDING';\nexport const SHIP_FETCH_ERROR = 'SHIPS_FETCH_ERROR';\nexport const SHIP_FETCH_SUCCESS = 'SHIP_FETCH_SUCCESS';\n\nexport const fetchShipById = id => async dispatch => {\n    console.log('fetchShipById', id);\n    dispatch({type: SHIP_FETCH_PENDING});\n    try {\n        const response = await axios({\n            method: 'get',\n            url: `http://localhost:3001/api/ships/${id}`,\n        });\n        dispatch({type: SHIP_FETCH_SUCCESS, data: response.data});\n    } catch (error) {\n        dispatch({type: SHIP_FETCH_ERROR, error});\n    }\n}\n\nexport const SHIP_CREATE_PENDING = 'SHIP_CREATE_PENDING';\nexport const SHIP_CREATE_ERROR = 'SHIP_CREATE_ERROR';\nexport const SHIP_CREATE_SUCCESS = 'SHIP_CREATE_SUCCESS';\n\nexport const createShip = newShip => async dispatch => {\n    console.log('createShip', newShip);\n    dispatch({type: SHIP_CREATE_PENDING});\n    try {\n        const response = await axios({\n            method: 'post',\n            url: `http://localhost:3001/api/ships/`,\n            data: newShip\n        });\n        console.log('createShip response', response);\n        dispatch({type: SHIP_CREATE_SUCCESS, data: response.data});\n    } catch (error) {\n        dispatch({type: SHIP_CREATE_ERROR, error});\n    }\n}\n\nexport const SHIP_UPDATE_PENDING = 'SHIP_UPDATE_PENDING';\nexport const SHIP_UPDATE_ERROR = 'SHIP_UPDATE_ERROR';\nexport const SHIP_UPDATE_SUCCESS = 'SHIP_UPDATE_SUCCESS';\n\nexport const updateShip = newShip => async dispatch => {\n    console.log('updateShip', newShip);\n    dispatch({type: SHIP_UPDATE_PENDING});\n    try {\n        const response = await axios({\n            method: 'put',\n            url: `http://localhost:3001/api/ships/${newShip.id}`,\n            data: newShip\n        });\n        console.log('updateShip response', response);\n        dispatch({type: SHIP_UPDATE_SUCCESS, data: response.data});\n    } catch (error) {\n        dispatch({type: SHIP_UPDATE_ERROR, error});\n    }\n}\n\nexport const SHIP_DELETE_PENDING = 'SHIP_DELETE_PENDING';\nexport const SHIP_DELETE_ERROR = 'SHIP_DELETE_ERROR';\nexport const SHIP_DELETE_SUCCESS = 'SHIP_DELETE_SUCCESS';\n\nexport const deleteShip = shipId => async dispatch => {\n    console.log('deleteShip', shipId);\n    dispatch({type: SHIP_DELETE_PENDING});\n    try {\n        const response = await axios({\n            method: 'delete',\n            url: `http://localhost:3001/api/ships/${shipId}`\n        });\n        console.log('deleteShip response', response);\n        dispatch({type: SHIP_DELETE_SUCCESS});\n    } catch (error) {\n        dispatch({type: SHIP_DELETE_ERROR, error});\n    }\n}\n"]},"metadata":{},"sourceType":"module"}