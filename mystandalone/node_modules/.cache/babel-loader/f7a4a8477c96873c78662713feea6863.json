{"ast":null,"code":"import _slicedToArray from \"/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/components/ship/index.js\";\nimport React, { useState } from 'react';\nimport { connect, useSelector } from \"react-redux\";\nimport _ from 'lodash';\nconst classifications = ['Starfighter', 'Freighter', 'Capital'];\n\nfunction Ship(id) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const _useState3 = useState(props.name || ''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(props.classification || classifications[0]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        classification = _useState6[0],\n        setClassification = _useState6[1];\n\n  const handleSave = (event, getShips) => {\n    event.preventDefault();\n    console.log('handleSave');\n    const ship = {\n      id,\n      name,\n      classification\n    };\n    axios.post(\"http://localhost:3001/api/ship/\".concat(id), ship).then(res => {\n      console.log('upsertRes', res);\n      const error = res.data.success ? '' : res.data.error;\n      setError(error);\n      getShips();\n    });\n  };\n\n  const shipId = id || 'New Ship';\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, !_.isEmpty(error) && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Error\"), \"\".concat(error.name, \" - \").concat(error.message || error.errmsg)), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, shipId), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"classification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Classification:\"), React.createElement(\"select\", {\n    value: classification,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, classifications.map((entry, idx) => React.createElement(\"option\", {\n    value: entry,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, entry)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Positions:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, JSON.stringify(props.positions, null, 4))), React.createElement(\"button\", {\n    onClick: e => handleSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Save\"));\n}\n\nexport default Ship;","map":{"version":3,"sources":["/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/components/ship/index.js"],"names":["React","useState","connect","useSelector","_","classifications","Ship","id","error","setError","props","name","setName","classification","setClassification","handleSave","event","getShips","preventDefault","console","log","ship","axios","post","then","res","data","success","shipId","isEmpty","message","errmsg","e","target","value","map","entry","idx","JSON","stringify","positions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect, useSelector } from \"react-redux\";\nimport _ from 'lodash';\n\nconst classifications =  ['Starfighter', 'Freighter', 'Capital'];\n\nfunction Ship(id) {\n    const [error, setError] = useState({});\n    const [name, setName] = useState(props.name || '');\n    const [classification, setClassification] = useState(props.classification || classifications[0]);\n    \n    const handleSave = (event, getShips) => {\n        event.preventDefault();\n        console.log('handleSave');\n\n        const ship = {\n            id,\n            name,\n            classification,\n        }\n\n        axios.post(`http://localhost:3001/api/ship/${id}`, ship)\n             .then(res => {\n                console.log('upsertRes', res);\n                const error = (res.data.success) ? '' : res.data.error;\n                setError(error);\n                getShips();\n            });\n    }\n\n    const shipId = id || 'New Ship';\n    return (\n        <div>\n            {\n                !_.isEmpty(error) && <span>\n                    <h3>Error</h3>\n                    {`${error.name} - ${error.message || error.errmsg}`}\n                </span>\n            }\n            <h3>{shipId}</h3>\n            <div>\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" id=\"name\" value={name} onChange={e => setName(e.target.value)}/>\n            </div>\n            <div>\n                <label for=\"classification\">Classification:</label>\n                <select value={classification} onChange={e => setName(e.target.value)}>\n                    {classifications.map((entry, idx) => (<option value={entry} key={idx}>{entry}</option>))}\n                </select>\n            </div>\n            <div>\n                <div>Positions:</div>\n                <div>\n                    {JSON.stringify(props.positions, null, 4)}\n                </div>\n            </div>\n            <button onClick={e => handleSave}>Save</button>\n        </div>\n    );\n}\n\nexport default Ship;\n"]},"metadata":{},"sourceType":"module"}