{"ast":null,"code":"import _slicedToArray from \"/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/components/ship/index.js\";\nimport React, { useState } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport { fetchShipById } from '../../actions/shipActions';\nconst classifications = ['Starfighter', 'Freighter', 'Capital'];\n\nfunction Ship(props) {\n  console.log('Ship() Entry');\n  console.log('props', props); //console.log('props.selectedShip', props.selectedShip);\n\n  const id = props.shipId || ''; //console.log('id', id);\n\n  const reduxSelectedShip = useSelector(state => state.selectedShip);\n  const ship = reduxSelectedShip.data;\n  console.log('ship', ship);\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const _useState3 = useState(ship.name || ''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(ship.classification || ''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        classification = _useState6[0],\n        setClassification = _useState6[1];\n\n  const _useState7 = useState(ship.positions || []),\n        _useState8 = _slicedToArray(_useState7, 2),\n        positions = _useState8[0],\n        setPositions = _useState8[1];\n\n  const handleSave = (event, getShips) => {\n    event.preventDefault();\n    console.log('handleSave');\n    const ship = {\n      id,\n      name,\n      classification,\n      positions\n    };\n  };\n\n  console.log(\"!id \".concat(!id, \" && ship.id !== id \").concat(ship.id !== id, \" && !reduxSelectedShip.isLoading \").concat(!reduxSelectedShip.isLoading));\n\n  if (id !== '' && ship.id !== id && !reduxSelectedShip.isLoading) {\n    props.fetchShipById(id);\n  }\n\n  console.log('Ship() return');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, !_.isEmpty(error) && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Error\"), \"\".concat(error.name, \" - \").concat(error.message || error.errmsg)), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, id), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Classification:\"), React.createElement(\"select\", {\n    value: classification,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, classifications.map(entry => React.createElement(\"option\", {\n    value: entry,\n    key: entry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, entry)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Positions:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, JSON.stringify(positions, null, 4))), React.createElement(\"button\", {\n    onClick: e => handleSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Save\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedShip: state.selectedShip\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchShipById\n})(Ship);","map":{"version":3,"sources":["/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/components/ship/index.js"],"names":["React","useState","connect","useSelector","useDispatch","_","fetchShipById","classifications","Ship","props","console","log","id","shipId","reduxSelectedShip","state","selectedShip","ship","data","error","setError","name","setName","classification","setClassification","positions","setPositions","handleSave","event","getShips","preventDefault","isLoading","isEmpty","message","errmsg","e","target","value","map","entry","JSON","stringify","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAAQC,aAAR,QAA4B,2BAA5B;AAEA,MAAMC,eAAe,GAAI,CAAC,aAAD,EAAgB,WAAhB,EAA6B,SAA7B,CAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,EAFiB,CAMjB;;AACA,QAAMG,EAAE,GAAGH,KAAK,CAACI,MAAN,IAAgB,EAA3B,CAPiB,CAQjB;;AACA,QAAMC,iBAAiB,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAArC;AACA,QAAMC,IAAI,GAAGH,iBAAiB,CAACI,IAA/B;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAApB;;AAXiB,oBAYShB,QAAQ,CAAC,EAAD,CAZjB;AAAA;AAAA,QAYVkB,KAZU;AAAA,QAYHC,QAZG;;AAAA,qBAaOnB,QAAQ,CAACgB,IAAI,CAACI,IAAL,IAAa,EAAd,CAbf;AAAA;AAAA,QAaVA,IAbU;AAAA,QAaJC,OAbI;;AAAA,qBAc2BrB,QAAQ,CAACgB,IAAI,CAACM,cAAL,IAAuB,EAAxB,CAdnC;AAAA;AAAA,QAcVA,cAdU;AAAA,QAcMC,iBAdN;;AAAA,qBAeiBvB,QAAQ,CAACgB,IAAI,CAACQ,SAAL,IAAkB,EAAnB,CAfzB;AAAA;AAAA,QAeVA,SAfU;AAAA,QAeCC,YAfD;;AAiBjB,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACpCD,IAAAA,KAAK,CAACE,cAAN;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,UAAMM,IAAI,GAAG;AACTL,MAAAA,EADS;AAETS,MAAAA,IAFS;AAGTE,MAAAA,cAHS;AAITE,MAAAA;AAJS,KAAb;AAMH,GAVD;;AAYAf,EAAAA,OAAO,CAACC,GAAR,eAAmB,CAACC,EAApB,gCAA4CK,IAAI,CAACL,EAAL,KAAYA,EAAxD,8CAA8F,CAACE,iBAAiB,CAACiB,SAAjH;;AACA,MAAInB,EAAE,KAAK,EAAP,IAAaK,IAAI,CAACL,EAAL,KAAYA,EAAzB,IAA+B,CAACE,iBAAiB,CAACiB,SAAtD,EAAiE;AAC7DtB,IAAAA,KAAK,CAACH,aAAN,CAAoBM,EAApB;AACH;;AAEDF,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAACN,CAAC,CAAC2B,OAAF,CAAUb,KAAV,CAAD,IAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADiB,YAEbA,KAAK,CAACE,IAFO,gBAEGF,KAAK,CAACc,OAAN,IAAiBd,KAAK,CAACe,MAF1B,EAF7B,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,EAAL,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,MAAtB;AAA6B,IAAA,KAAK,EAAES,IAApC;AAA0C,IAAA,QAAQ,EAAEc,CAAC,IAAIb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAQ,IAAA,KAAK,EAAEd,cAAf;AAA+B,IAAA,QAAQ,EAAEY,CAAC,IAAIb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9B,eAAe,CAAC+B,GAAhB,CAAqBC,KAAD,IAAY;AAAQ,IAAA,KAAK,EAAEA,KAAf;AAAsB,IAAA,GAAG,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAAhC,CADL,CAFJ,CAZJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACC,SAAL,CAAehB,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CADL,CAFJ,CAlBJ,EAwBI;AAAQ,IAAA,OAAO,EAAEU,CAAC,IAAIR,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ,CADJ;AA4BH;;AAED,MAAMe,eAAe,GAAG3B,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,YAAY,EAAED,KAAK,CAACC;AADjB,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAACwC,eAAD,EAAkB;AAACpC,EAAAA;AAAD,CAAlB,CAAP,CAA0CE,IAA1C,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\n\nimport {fetchShipById} from '../../actions/shipActions';\n\nconst classifications =  ['Starfighter', 'Freighter', 'Capital'];\n\nfunction Ship(props) {\n    console.log('Ship() Entry');\n    console.log('props', props);\n\n\n\n    //console.log('props.selectedShip', props.selectedShip);\n    const id = props.shipId || '';\n    //console.log('id', id);\n    const reduxSelectedShip = useSelector(state => state.selectedShip);\n    const ship = reduxSelectedShip.data;\n    console.log('ship', ship);\n    const [error, setError] = useState({});\n    const [name, setName] = useState(ship.name || '');\n    const [classification, setClassification] = useState(ship.classification || '');\n    const [positions, setPositions] = useState(ship.positions || []);\n    \n    const handleSave = (event, getShips) => {\n        event.preventDefault();\n        console.log('handleSave');\n\n        const ship = {\n            id,\n            name,\n            classification,\n            positions,\n        }\n    }\n\n    console.log(`!id ${!id} && ship.id !== id ${ship.id !== id} && !reduxSelectedShip.isLoading ${!reduxSelectedShip.isLoading}`);\n    if (id !== '' && ship.id !== id && !reduxSelectedShip.isLoading) {\n        props.fetchShipById(id);\n    }\n\n    console.log('Ship() return');\n    return (\n        <div>\n            {\n                !_.isEmpty(error) && <span>\n                    <h3>Error</h3>\n                    {`${error.name} - ${error.message || error.errmsg}`}\n                </span>\n            }\n            <h3>{id}</h3>\n            <div>\n                <label>Name:</label>\n                <input type=\"text\" id=\"name\" value={name} onChange={e => setName(e.target.value)}/>\n            </div>\n            <div>\n                <label>Classification:</label>\n                <select value={classification} onChange={e => setName(e.target.value)}>\n                    {classifications.map((entry) => (<option value={entry} key={entry}>{entry}</option>))}\n                </select>\n            </div>\n            <div>\n                <div>Positions:</div>\n                <div>\n                    {JSON.stringify(positions, null, 4)}\n                </div>\n            </div>\n            <button onClick={e => handleSave}>Save</button>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedShip: state.selectedShip,\n    }\n}\n\nexport default connect(mapStateToProps, {fetchShipById})(Ship);\n"]},"metadata":{},"sourceType":"module"}