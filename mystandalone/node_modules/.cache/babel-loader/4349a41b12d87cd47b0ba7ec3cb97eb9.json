{"ast":null,"code":"import _defineProperty from \"/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/components/ship/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useSelector } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { fetchShipById, createShip, updateShip, deleteShip } from '../../actions/shipActions';\nconst classifications = ['Starfighter', 'Freighter', 'Capital'];\n\nfunction Ship({\n  shipId,\n  fetchShipById,\n  createShip,\n  updateShip,\n  deleteShip\n}) {\n  console.log('Ship() Call');\n  const selectedShip = useSelector(reduxState => reduxState.selectedShip);\n  const shipDate = selectedShip.data,\n        isLoading = selectedShip.isLoading,\n        error = selectedShip.error; // Local state\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        classification = _useState4[0],\n        setClassification = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        positions = _useState6[0],\n        setPositions = _useState6[1]; // Go out and fetch the ship data if the shipId is set\n  // Only repeat if a new shipId is passed in\n\n\n  useEffect(() => {\n    console.log('useEffect() - fetch', shipId);\n\n    if (shipId && shipId !== '') {\n      console.log('useEffect() - fetch - running');\n      fetchShipById(shipId);\n    }\n  }, [shipId, fetchShipById]); // Map the loaded ship into the local state when it is \n  // finally updated in redux\n\n  useEffect(() => {\n    console.log('useEffect() - mapping to local', shipData);\n    console.log(\"shipId === shipData._id \".concat(shipId === shipData.id, \" isLoading === false \").concat(isLoading === false));\n\n    if (shipId === shipData._id && isLoading === false) {\n      console.log('useEffect() - mapping to local - running');\n      setName(shipData.name);\n      setClassification(shipData.classification);\n      setPositions(shipData.positions);\n    }\n  }, [shipId, shipData, isLoading]);\n\n  const handleSave = () => {\n    console.log('handleSave');\n\n    const newShip = _objectSpread({}, shipData, {\n      name,\n      classification,\n      positions\n    });\n\n    console.log('handleSave', newShip);\n\n    if (shipId) {\n      updateShip(newShip);\n    } else {\n      createShip(newShip);\n    }\n  };\n\n  const handleDelete = () => {\n    console.log('handleDelete');\n    deleteShip(shipData._id);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, !_.isEmpty(error) && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Error\"), \"\".concat(error.name, \" - \").concat(error.message || error.errmsg)), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, shipId), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Classification:\"), React.createElement(\"select\", {\n    value: classification,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, classifications.map(entry => React.createElement(\"option\", {\n    value: entry,\n    key: entry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, entry)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Positions:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, JSON.stringify(positions, null, 4))), React.createElement(\"button\", {\n    onClick: handleSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Delete\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedShip: state.selectedShip\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchShipById,\n  createShip,\n  updateShip,\n  deleteShip\n};\nexport default connect({}, mapDispatchToProps)(Ship);","map":{"version":3,"sources":["/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/components/ship/index.js"],"names":["React","useState","useEffect","useSelector","connect","_","fetchShipById","createShip","updateShip","deleteShip","classifications","Ship","shipId","console","log","selectedShip","reduxState","shipDate","data","isLoading","error","name","setName","classification","setClassification","positions","setPositions","shipData","id","_id","handleSave","newShip","handleDelete","isEmpty","message","errmsg","e","target","value","map","entry","JSON","stringify","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useSelector } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport {\n    fetchShipById,\n    createShip,\n    updateShip,\n    deleteShip,\n} from '../../actions/shipActions';\n\nconst classifications =  ['Starfighter', 'Freighter', 'Capital'];\n\nfunction Ship({\n    shipId,\n    fetchShipById, \n    createShip,\n    updateShip,\n    deleteShip\n}) {\n    console.log('Ship() Call');\n    const selectedShip = useSelector(reduxState => reduxState.selectedShip);\n    const {data: shipDate, isLoading, error} = selectedShip;\n\n    // Local state\n    const [name, setName] = useState('');\n    const [classification, setClassification] = useState('');\n    const [positions, setPositions] = useState([]);\n\n    // Go out and fetch the ship data if the shipId is set\n    // Only repeat if a new shipId is passed in\n    useEffect(() => {\n        console.log('useEffect() - fetch', shipId);\n        if (shipId && shipId !== '') {\n            console.log('useEffect() - fetch - running');\n            fetchShipById(shipId);\n        }\n    }, [shipId, fetchShipById])\n\n    // Map the loaded ship into the local state when it is \n    // finally updated in redux\n    useEffect(() => {\n        console.log('useEffect() - mapping to local', shipData);\n        console.log(`shipId === shipData._id ${shipId === shipData.id} isLoading === false ${isLoading === false}`)\n        if (shipId === shipData._id && isLoading === false) {\n            console.log('useEffect() - mapping to local - running');\n            setName(shipData.name);\n            setClassification(shipData.classification);\n            setPositions(shipData.positions);\n        }\n    }, [shipId, shipData, isLoading])\n\n    const handleSave = () => {\n        console.log('handleSave');\n\n        const newShip = {\n            ...shipData,\n            name,\n            classification,\n            positions,\n        }\n        console.log('handleSave', newShip);\n\n        if (shipId) {\n            updateShip(newShip);\n        } else {\n            createShip(newShip);\n        }\n    }\n\n    const handleDelete = () => {\n        console.log('handleDelete');\n        deleteShip(shipData._id);\n    }\n\n    return (\n        <div>\n            {\n                !_.isEmpty(error) && <span>\n                    <h3>Error</h3>\n                    {`${error.name} - ${error.message || error.errmsg}`}\n                </span>\n            }\n            <h3>{shipId}</h3>\n            <div>\n                <label>Name:</label>\n                <input type=\"text\" id=\"name\" value={name} onChange={e => setName(e.target.value)}/>\n            </div>\n            <div>\n                <label>Classification:</label>\n                <select value={classification} onChange={e => setName(e.target.value)}>\n                    {classifications.map((entry) => (<option value={entry} key={entry}>{entry}</option>))}\n                </select>\n            </div>\n            <div>\n                <div>Positions:</div>\n                <div>\n                    {JSON.stringify(positions, null, 4)}\n                </div>\n            </div>\n            <button onClick={handleSave}>Save</button>\n            <button onClick={handleDelete}>Delete</button>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedShip: state.selectedShip,\n    }\n}\n\nconst mapDispatchToProps = {\n    fetchShipById,\n    createShip,\n    updateShip,\n    deleteShip\n}\n\nexport default connect({}, mapDispatchToProps)(Ship);\n"]},"metadata":{},"sourceType":"module"}