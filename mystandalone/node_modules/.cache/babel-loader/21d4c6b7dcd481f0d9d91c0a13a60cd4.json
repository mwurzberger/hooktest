{"ast":null,"code":"import axios from 'axios';\nimport { fetchShips } from './shipListActions';\nexport const CLEAR_SHIP_SELECTION = 'CLEAR_SHIP_SELECTION';\nexport const clearShipSelection = () => async dispatch => {\n  console.log('clearShipSelection');\n  dispatch({\n    type: CLEAR_SHIP_SELECTION\n  });\n};\nexport const SHIP_FETCH_PENDING = 'SHIP_FETCH_PENDING';\nexport const SHIP_FETCH_ERROR = 'SHIP_FETCH_ERROR';\nexport const SHIP_FETCH_SUCCESS = 'SHIP_FETCH_SUCCESS';\nexport const fetchShipById = id => async dispatch => {\n  console.log('fetchShipById', id);\n  dispatch({\n    type: SHIP_FETCH_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'get',\n      url: \"http://localhost:3001/api/ships/\".concat(id)\n    });\n    dispatch({\n      type: SHIP_FETCH_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SHIP_FETCH_ERROR,\n      error\n    });\n  }\n};\nexport const SHIP_CREATE_PENDING = 'SHIP_CREATE_PENDING';\nexport const SHIP_CREATE_ERROR = 'SHIP_CREATE_ERROR';\nexport const SHIP_CREATE_SUCCESS = 'SHIP_CREATE_SUCCESS';\nexport const createShip = newShip => async dispatch => {\n  console.log('createShip', newShip);\n  dispatch({\n    type: SHIP_CREATE_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'post',\n      url: \"http://localhost:3001/api/ships/\",\n      data: newShip\n    });\n    console.log('createShip response', response);\n    dispatch({\n      type: SHIP_CREATE_SUCCESS,\n      data: response.data\n    });\n    dispatch(fetchShips());\n  } catch (error) {\n    dispatch({\n      type: SHIP_CREATE_ERROR,\n      error\n    });\n  }\n};\nexport const SHIP_UPDATE_PENDING = 'SHIP_UPDATE_PENDING';\nexport const SHIP_UPDATE_ERROR = 'SHIP_UPDATE_ERROR';\nexport const SHIP_UPDATE_SUCCESS = 'SHIP_UPDATE_SUCCESS';\nexport const updateShip = newShip => async dispatch => {\n  console.log('updateShip', newShip);\n  dispatch({\n    type: SHIP_UPDATE_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'put',\n      url: \"http://localhost:3001/api/ships/\".concat(newShip._id),\n      data: newShip\n    });\n    console.log('updateShip response', response);\n    dispatch({\n      type: SHIP_UPDATE_SUCCESS,\n      data: response.data\n    });\n    dispatch(fetchShips());\n  } catch (error) {\n    dispatch({\n      type: SHIP_UPDATE_ERROR,\n      error\n    });\n  }\n};\nexport const SHIP_DELETE_PENDING = 'SHIP_DELETE_PENDING';\nexport const SHIP_DELETE_ERROR = 'SHIP_DELETE_ERROR';\nexport const SHIP_DELETE_SUCCESS = 'SHIP_DELETE_SUCCESS';\nexport const deleteShip = shipId => async dispatch => {\n  console.log('deleteShip', shipId);\n  dispatch({\n    type: SHIP_DELETE_PENDING\n  });\n\n  try {\n    const response = await axios({\n      method: 'delete',\n      url: \"http://localhost:3001/api/ships/\".concat(shipId)\n    });\n    console.log('deleteShip response', response);\n    dispatch({\n      type: SHIP_DELETE_SUCCESS\n    });\n    dispatch(fetchShips());\n  } catch (error) {\n    dispatch({\n      type: SHIP_DELETE_ERROR,\n      error\n    });\n  }\n};","map":{"version":3,"sources":["/home/mwurzberger/Code/Sandbox/mg-test/mystandalone/src/actions/shipActions.js"],"names":["axios","fetchShips","CLEAR_SHIP_SELECTION","clearShipSelection","dispatch","console","log","type","SHIP_FETCH_PENDING","SHIP_FETCH_ERROR","SHIP_FETCH_SUCCESS","fetchShipById","id","response","method","url","data","error","SHIP_CREATE_PENDING","SHIP_CREATE_ERROR","SHIP_CREATE_SUCCESS","createShip","newShip","SHIP_UPDATE_PENDING","SHIP_UPDATE_ERROR","SHIP_UPDATE_SUCCESS","updateShip","_id","SHIP_DELETE_PENDING","SHIP_DELETE_ERROR","SHIP_DELETE_SUCCESS","deleteShip","shipId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {fetchShips} from './shipListActions';\n\nexport const CLEAR_SHIP_SELECTION = 'CLEAR_SHIP_SELECTION';\nexport const clearShipSelection = () => async dispatch => {\n    console.log('clearShipSelection');\n    dispatch({type: CLEAR_SHIP_SELECTION});\n}\n\nexport const SHIP_FETCH_PENDING = 'SHIP_FETCH_PENDING';\nexport const SHIP_FETCH_ERROR = 'SHIP_FETCH_ERROR';\nexport const SHIP_FETCH_SUCCESS = 'SHIP_FETCH_SUCCESS';\n\nexport const fetchShipById = id => async dispatch => {\n    console.log('fetchShipById', id);\n    dispatch({type: SHIP_FETCH_PENDING});\n    try {\n        const response = await axios({\n            method: 'get',\n            url: `http://localhost:3001/api/ships/${id}`,\n        });\n        dispatch({type: SHIP_FETCH_SUCCESS, data: response.data});\n    } catch (error) {\n        dispatch({type: SHIP_FETCH_ERROR, error});\n    }\n}\n\nexport const SHIP_CREATE_PENDING = 'SHIP_CREATE_PENDING';\nexport const SHIP_CREATE_ERROR = 'SHIP_CREATE_ERROR';\nexport const SHIP_CREATE_SUCCESS = 'SHIP_CREATE_SUCCESS';\n\nexport const createShip = newShip => async dispatch => {\n    console.log('createShip', newShip);\n    dispatch({type: SHIP_CREATE_PENDING});\n    try {\n        const response = await axios({\n            method: 'post',\n            url: `http://localhost:3001/api/ships/`,\n            data: newShip\n        });\n        console.log('createShip response', response);\n        dispatch({type: SHIP_CREATE_SUCCESS, data: response.data});\n        dispatch(fetchShips());\n    } catch (error) {\n        dispatch({type: SHIP_CREATE_ERROR, error});\n    }\n}\n\nexport const SHIP_UPDATE_PENDING = 'SHIP_UPDATE_PENDING';\nexport const SHIP_UPDATE_ERROR = 'SHIP_UPDATE_ERROR';\nexport const SHIP_UPDATE_SUCCESS = 'SHIP_UPDATE_SUCCESS';\n\nexport const updateShip = newShip => async dispatch => {\n    console.log('updateShip', newShip);\n    dispatch({type: SHIP_UPDATE_PENDING});\n    try {\n        const response = await axios({\n            method: 'put',\n            url: `http://localhost:3001/api/ships/${newShip._id}`,\n            data: newShip\n        });\n        console.log('updateShip response', response);\n        dispatch({type: SHIP_UPDATE_SUCCESS, data: response.data});\n        dispatch(fetchShips());\n    } catch (error) {\n        dispatch({type: SHIP_UPDATE_ERROR, error});\n    }\n}\n\nexport const SHIP_DELETE_PENDING = 'SHIP_DELETE_PENDING';\nexport const SHIP_DELETE_ERROR = 'SHIP_DELETE_ERROR';\nexport const SHIP_DELETE_SUCCESS = 'SHIP_DELETE_SUCCESS';\n\nexport const deleteShip = shipId => async dispatch => {\n    console.log('deleteShip', shipId);\n    dispatch({type: SHIP_DELETE_PENDING});\n    try {\n        const response = await axios({\n            method: 'delete',\n            url: `http://localhost:3001/api/ships/${shipId}`\n        });\n        console.log('deleteShip response', response);\n        dispatch({type: SHIP_DELETE_SUCCESS});\n        dispatch(fetchShips());\n    } catch (error) {\n        dispatch({type: SHIP_DELETE_ERROR, error});\n    }\n}\n"]},"metadata":{},"sourceType":"module"}